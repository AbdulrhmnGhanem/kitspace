[{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"},{"name":"Arduino UNO","description":"The Arduino Uno is a microcontroller board based on the ATmega328.","site":"http://www.arduino.cc/en/Main/ArduinoBoardUno","license":"","id":"github.com/kitnic/arduino-uno","readme":""},{"name":"Bus Pirate","description":"The Bus Pirate is an open source hacker multi-tool that talks to electronic stuff.","site":"http://dangerousprototypes.com/docs/Bus_Pirate","license":"","id":"github.com/kitnic/Bus_Pirate","readme":""},{"name":"","description":"Hardware design for a CC2538 based development board","site":"https://github.com/kitnic/CC2538-dev-board","license":"","id":"github.com/kitnic/CC2538-dev-board","readme":"CC2538 Development Board\n========================\n\nThis is the hardware design of a development board for the [CC2538 chip of Texas Instruments](http://www.ti.com/product/cc2538).\n\n![http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg](http://jelmertiete.com/images/2014-05-07-cc2538-development-board-2.jpg)\n\nYou can find more info about the design and hardware decisions [in this blog post](http://jelmertiete.com/2014/05/07/cc2538-development-board/)\n\nThe pcb antenna used in this design has its own repository: https://github.com/JelmerT/Eagle-2.4gHz-folded-dipole-pcb-antenna\n\nI also wrote a handy serial bootloader for this dev-board and other CC2538 (and CC26XX and 13XX) hardware, which you can find here: https://github.com/JelmerT/cc2538-bsl\n\nIf you improve this design in any way, consider submitting a pull request or contact me. I'd appreciate it if you let me know if you use this design in a real deployment. I'd like to add your project to this page.\n\nLicense\n-------\n**This hardware project is released under the [Creative Commons Share-alike 4.0 International](http://creativecommons.org/licenses/by-sa/4.0/) license.**\n\n![CC-by-sa](http://i.creativecommons.org/l/by-sa/4.0/88x31.png)\n\n(C) Jelmer Tiete - <jelmer@tiete.be>  [![Analytics](https://ga-beacon.appspot.com/UA-3496907-10/JelmerT/cc2538-dev-board?pixel)](https://github.com/igrigorik/ga-beacon)\n"},{"name":"","description":"HackAday Cortex Kit","site":"https://github.com/kitnic/HACK","license":"","id":"github.com/kitnic/HACK","readme":"#HACK\n##HackAday Cortex Kit\n\nA Cortex-M0+ development kit with an Atmel SAM R21, a USB device/host port, a regulator, some passives, a programming header, and breakout headers.\n\n```\nCopyright © Michele Perla 2015\n\nThis documentation describes Open Hardware and is licensed under the CERN OHL v. 1.2.\nYou may redistribute and modify this documentation under the terms of the CERN OHL v.1.2. \n(http://ohwr.org/cernohl). This documentation is distributed\nWITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF\nMERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A\nPARTICULAR PURPOSE. Please see the CERN OHL v.1.2 for applicable\nconditions\n```"},{"name":"MC HCK","description":"A small, cheap, and powerful development board that supports USB for easy programming, at a low price.","site":"http://mchck.org","license":"CERN OHL v1.1","id":"github.com/kitnic/mchck-board","readme":""},{"name":"Oculus RiftDK1 Tracker","description":"Oculus Rift Development Kit 1 head tracking module.","site":"https://github.com/OculusVR/RiftDK1","license":"","id":"github.com/kitnic/RiftDK1","readme":"Oculus Rift Development Kit 1\n=======\n\nFirmware, Schematics, and Mechanicals for the Oculus Rift Development Kit 1.\n\nFirmware\n--------\n\nThe Tracker firmware uses the CooCox CoIDE for development along with \nthe gcc-arm-embedded toolchain.\n\nThe ST-Link/V2 is the cheapest way to load firmware onto a Tracker\nboard, though any SWD compatible programmer should work.  You can follow these steps\nto set up a build environment and load firmware onto the board:\n\n1. Install ST-Link drivers if you haven't: http://www.st.com/web/en/catalog/tools/PF258167\n2. Install CoCenter: http://www.coocox.org/CooCox_CoIDE.htm\n3. Through CoCenter, install CooCox and CoFlash\n4. Install gcc-arm-embedded: https://launchpad.net/gcc-arm-embedded/+download\n5. Set up gcc-arm-embedded in CooCox: http://www.coocox.org/CoIDE/Compiler_Settings.html\n6. Clone our RiftDK1 repository to C:\\CooCox\\CoIDE\\workspace\n7. Open the Tracker.coproj\n8. Build\n9. Plug the ST-Link into the board's 10 pin SWD header.\n10. Plug in USB to power the board.\n12. Download code to Flash \n13. Enjoy!\n\nNote that the USB Product ID is set to 0x0001, which matches the production\nversion of the Tracker.  If you modify the firmware in a way that\nchanges the USB interface, please change the Product ID to 0x0000.\n\nMechanical\n----------\n\nThe Mechanical folder contains STEP files of the Rift DK1 housing, control box, and case.\n\nSchematics\n----------\n\nThe Schematics folder contains a pdf of the schematic, as well as Altium Designer files\nof the schematic and board layout.\n"}]